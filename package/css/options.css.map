{
  "version": 3,
  "file": "options.css",
  "sources": [
    "../../src/options/routes/History.svelte",
    "../../src/main/components/Button.svelte",
    "../../src/main/components/ButtonTabs.svelte",
    "../../src/main/components/Heatmap.svelte",
    "../../src/main/components/Icon.svelte",
    "../../src/main/components/Page.svelte",
    "../../src/options/routes/Settings.svelte",
    "../../src/main/components/ButtonGroup.svelte",
    "../../src/main/components/WindowTitle.svelte",
    "../../src/main/components/Input.svelte"
  ],
  "sourcesContent": [
    "<script>\n    import Button from '../../main/components/Button.svelte'\n    import ButtonTabs from '../../main/components/ButtonTabs.svelte'\n    import Heatmap from '../../main/components/Heatmap.svelte'\n    import Icon from '../../main/components/Icon.svelte'\n    import Page from '../../main/components/Page.svelte'\n\n</script>\n\n<Page>\n    <div class=\"main\">\n        History\n    </div>\n</Page>\n\n<style>\n    .main {\n        padding: 20px;\n    }\n</style>",
    "<script>\n    import Icon from './Icon.svelte'\n\n    let className = ''\n\texport { className as class }\n    export let type = ''\n    export let color = '' \n    export let icon = ''\n    export let active = ''\n    export let loading = false\n    $: loading\n</script>\n\n<button \n    {type} class={className} \n    class:color class:icon class:loading class:active\n    on:click on:hover>\n    <div class=\"content-wrapper\">\n        {#if icon}\n            <span class=\"button-prefix\">\n                <Icon {icon}></Icon>\n            </span>\n        {/if}\n        {#if loading}\n            <span class=\"loading-spinner {loading?'visible':''}\">\n                <Icon icon=\"loading\"></Icon>\n            </span>\n        {/if}\n        <slot></slot>\n    </div>\n</button>\n\n<style>\n    button {\n        line-height: 1.5;\n        position: relative;\n        display: inline-block;\n        font-weight: 400;\n        white-space: nowrap;\n        text-align: center;\n        background-image: none;\n        border: 1px solid transparent;\n        box-shadow: 0 2px 0 rgba(0,0,0,0.015);\n        cursor: pointer;\n        transition: all .3s cubic-bezier(.645, .045, .355, 1);\n        user-select: none;\n        touch-action: manipulation;\n        height: 35px;\n        padding: 0 10px;\n        font-size: 14px;\n        border-radius: 4px;\n        color: rgba(0,0,0,0.65);\n        background-color: #fff;\n        border-color: #d9d9d9;\n        outline: none;\n    }\n    button .content-wrapper {\n        display: flex;\n        align-items: center;\n    }\n    button.primary {\n        color: #fff;\n        background-color: #1890ff;\n        border: none;\n    }\n    button.primary:hover, \n    button.primary:focus {\n        color: #fff;\n        background-color: #40a9ff;\n        border-color: #40a9ff;\n    }\n\n    .button-prefix {\n        z-index: 2;\n        color: inherit;\n        line-height: inherit;\n        font-size: 22px;\n    }\n\n    button.loading {\n        cursor: disabled;\n    }\n    button.loading:after {\n        content: \"\"; \n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background-color: #fff;\n        opacity: .6;\n        cursor: disabled;\n        z-index: 2;\n    }\n    .loading-spinner {\n        position: absolute;\n        display: none;\n        top: 50%;\n        transform: translateY(-50%);\n        left: 50%;\n        transform: translateX(-50%);\n        z-index: 2;\n        font-size: 22px;\n        animation: spin 1s infinite linear;\n        color: #444;\n        z-index: 3;\n    }\n    @keyframes spin {\n        from {transform:rotate(0deg);}\n        to {transform:rotate(360deg);}\n    }\n    \n    .visible {\n        display: block;\n    }\n    button.active,\n    button:hover, \n    .button:focus {\n        color: #40a9ff;\n        background-color: #fff;\n        border-color: #40a9ff;\n    }\n</style>",
    "<script>\n    import ButtonGroup from './ButtonGroup.svelte'\n    import Button from './Button.svelte'\n\n\texport let tabs = []\n    let selected = tabs[0]\n</script>\n\n{#if tabs.length > 0}\n    <div class=\"tab-wrapper\">\n        <div class=\"tab-header\">\n            <ButtonGroup>\n                {#each tabs as tab, i}\n                    <Button \n                        on:click={(event, index=i) => {selected = tabs[index] }}\n                        active={selected === tabs[i]}>\n                        {tab.title}\n                    </Button>\n                {/each}\n            </ButtonGroup>\n        </div>\n        <div class=\"tab-content\">\n            <svelte:component this={selected.component} {...selected.props}/>\n        </div>\n    </div>\n{/if}\n\n<style>\n    .tab-wrapper {\n        padding: 5px 10px;\n    }\n    .tab-header,\n    .tab-content {\n        padding: 5px 10px;\n    }\n</style>\n",
    "<script>\n    //TODO: Look at https://github.com/g1eb/calendar-heatmap\n    import { onMount } from 'svelte'\n    export let mapData = []\n\n    export let SQUARE_LENGTH = 11\n    export let SQUARE_PADDING = 2\n    export let MONTH_LABEL_PADDING = 16\n    let locale = {\n        months: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n        days: ['Sun', 'Mon', 'Tue', 'Wed', 'Tue', 'Fri', 'Sat'],\n        No: 'No',\n        on: 'on',\n        Less: 'Less',\n        More: 'More'\n    };\n    export let colorRange = ['#f4f7f7', '#79a8a9']\n    export let weekStart = 0 //0 for Sunday, 1 for Monday\n    export let startDate = null\n    export let endDate = null\n    export let dateRange = d3.timeDays(startDate, endDate)\n    let firstDate = moment(dateRange[0])\n    let counterMap= {}\n    let max = mapData && mapData[0].count\n\n    for (let i = 1, len = mapData.length; i < len; i++) {\n        let value = mapData[i].count\n        max = (value > max) ? value : max\n    }\n\n    mapData.forEach(function (element, index) {\n        var key = moment(element.date).format( 'YYYY-MM-DD' )\n        var counter= counterMap[key] || 0;\n        counterMap[key]= counter + element.count\n    });\n\n    var color = (d3.scaleLinear)()\n      .range(colorRange)\n      .domain([0, max])\n\n    function formatWeekday(weekDay) {\n      if (weekStart === 1) {\n        if (weekDay === 0) {\n          return 6\n        } else {\n          return weekDay - 1\n        }\n      }\n      return weekDay\n    }\n\n    function countForDate(d) {\n        var key= moment(d).format( 'YYYY-MM-DD' );\n        return counterMap[key] || 0;\n    }\n\n    function x(d, i) {\n        var cellDate = moment(d);\n        var result = cellDate.week() - firstDate.week() + (firstDate.weeksInYear() * (cellDate.weekYear() - firstDate.weekYear()));\n        return result * (SQUARE_LENGTH + SQUARE_PADDING);\n    }\n\n    function y(d, i) {\n        return formatWeekday((new Date(d)).getDay()) * (SQUARE_LENGTH + SQUARE_PADDING);\n    }\n\n    function dayCellStyle(item, index){\n        return `background-color: ${color(countForDate(item.date))};`+ \n        `width: ${SQUARE_LENGTH}px;`+\n        `height: ${SQUARE_LENGTH}px;`+\n        `top: ${y(item.date, index)}px;`+\n        `left: ${x(item.date, index)}px;`\n    }\n\n    var monthRange = d3.timeMonths(moment(startDate).startOf('month').toDate(), (new Date(endDate))); \n    \n    function month_x(m) {\n        var index = dateRange.findIndex((date) => {\n            return (m.getMonth() == (new Date(date)).getMonth()) && \n            (m.getFullYear() == (new Date(date)).getFullYear())\n        })\n        index = index === -1? 0: index;\n\n        return Math.floor(index / 7) * (SQUARE_LENGTH + SQUARE_PADDING) + 28;\n    }\n</script>\n\n<div class=\"heatmap\">\n    <div class='month-name-wrapper'>\n        {#each monthRange as month}\n            <div class=\"month-name\" style=\"left: {month_x(month)}px\">\n                {locale.months[month.getMonth()]}\n            </div>\n        {/each}\n    </div>\n    <div class=\"horizontal\">\n        <div class=\"day-name-wrapper\">\n            {#each locale.days as day, index}\n                {#if formatWeekday(index)%2 }\n                    <div class=\"day-name\">{day}</div>\n                {/if}\n            {/each}\n        </div>\n        <div class=\"day-cell-wrapper\">\n            {#each mapData as item, index}\n                <span class='day-cell' style={dayCellStyle(item, index)}></span>\n            {/each}\n        </div>\n    </div>\n</div>\n\n<style>\n    .horizontal {\n        display: flex;\n    }\n    .month-name-wrapper{\n        display: flex;\n        position: relative;\n        padding-left: 28px;\n        height: 20px;\n    }\n    .month-name{\n        position: absolute;\n        padding: 0 3px;\n        font-size: 11px;\n    }\n    .day-name-wrapper{\n        position: relative;\n        padding: 0 3px;\n    }\n    .day-name {\n        position: relative; \n        display: block;\n        text-align: right;\n        font-size: 10px;\n        margin-top: 11px;\n    }\n    .day-cell-wrapper{\n        height: 90px;\n        position: relative;\n    }\n    .day-cell{\n        position: absolute; \n        display: block;\n    }\n</style>",
    "<script>\n    export let icon\n    export let fontSize = false\n    export let spin = false\n</script>\n\n<i class=\"mdi mdi-{icon} {spin ? 'mdi-spin': ''}\" \n    on:click on:dblclick\n    style=\"{fontSize? `font-size: ${fontSize} px`: ''}\"></i>\n\n<style>\n    i {\n        display: inline-block;\n        color: inherit;\n        font-size: inherit;\n        font-style: normal;\n        line-height: inherit;\n        text-align: center;\n        text-transform: none;\n        -webkit-font-smoothing: antialiased;\n    }\n</style>",
    "<script>\n    import WindowTitle from './WindowTitle.svelte'\n</script>\n<div class=\"page\">\n    <slot></slot>\n</div>\n<style>\n    .page {\n        display: flex;\n        flex-direction: column;\n        height: 100%;\n    }\n</style>",
    "<script>\n    import * as Sounds from '../../Sounds';\n    import { SettingsClient, SoundsClient } from '../../background/Services'\n    import Button from '../../main/components/Button.svelte'\n    //import CountdownSettings from './CountdownSettings'\n    import createTimerSound from '../../TimerSound'\n    import Input from '../../main/components/Input.svelte'\n    import Icon from '../../main/components/Icon.svelte'\n    import M from '../../Messages';\n    import Mutex from '../../Mutex';\n    import Page from '../../main/components/Page.svelte'\n\n    function getFocusTimerBpm() {\n        let sound = settings.focus.timerSound;\n        return sound\n            && sound.metronome\n            && sound.metronome.bpm;\n    }\n\n    let settingsClient = new SettingsClient()\n    let soundsClient = new SoundsClient()\n    let settings = null\n    let showSettingsSaved = false\n    let showSettingsSavedTimeout = null\n    let notificationSounds = null\n    let timerSounds = null\n    let timerSound = null\n    let timerSoundMutex = new Mutex()\n    let focusTimerSound = null\n    let focusTimerBPM = null\n\n    settingsClient.getSettings()\n        .then((response)=>{\n            settings = response\n            focusTimerSound = getFocusTimerSound()\n            focusTimerBPM = getFocusTimerBpm()\n        })\n\n    soundsClient.getNotificationSounds()\n        .then((response)=>{\n            notificationSounds = response\n        })\n    \n    soundsClient.getTimerSounds()\n        .then((response)=>{\n            timerSounds = response\n        })\n\n    function getFocusTimerSound() {\n        let sound = settings && settings.focus.timerSound;\n        return sound && (sound.procedural || sound.metronome.files);\n    }\n\n    function saveSettings() {\n        settingsClient.setSettings(settings)\n        clearTimeout(showSettingsSavedTimeout);\n        showSettingsSavedTimeout = setTimeout(() => {\n            showSettingsSaved = false;\n        }, 1000);\n        showSettingsSaved = true;\n    }\n\n    async function playTimerSound() {\n        timerSoundMutex.exclusive(async () => {\n            timerSound = await createTimerSound(settings.focus.timerSound);\n            timerSound.start();\n        });\n    }\n    function stopTimerSound() {\n        timerSoundMutex.exclusive(async () => {\n            timerSound.close()  \n            timerSound = null\n        })\n    }\n    function dismissSettingsSaved() {\n        showSettingsSaved = false\n        clearTimeout(showSettingsSavedTimeout)\n    }\n\n    function setFocusTimerSound(value) {\n        if(!settings) return\n        let focus = settings.focus;\n        if (!value) {\n          focus.timerSound = null;\n        } else if (!Array.isArray(value)) {\n            focus.timerSound = {\n                procedural: value\n            };\n        } else if (focus.timerSound && focus.timerSound.metronome) {\n            focus.timerSound.metronome.files = value;\n        } else {\n            focus.timerSound = {\n                metronome: {\n                    files: value,\n                    bpm: 60\n                }\n            }\n        }\n    }\n\n    function setSound(filename) {\n      //$emit('input', filename);\n      Sounds.play(filename);\n    }\n\n    function setFocusTimerBpm(bpm) {\n        let sound = settings.focus.timerSound;\n        if (!sound || !sound.metronome) {\n            return;\n        }\n        sound.metronome.bpm = bpm;\n    }\n\n    function canPlayTimerSound() {\n        let bpm = focusTimerBpm;\n        return focusTimerSound\n            && ((bpm == null) || (bpm > 0 && bpm <= 1000));\n    }\n\n    $: saveSettings(settings);\n    $: setFocusTimerSound(focusTimerSound)\n</script>\n\n<Page>\n    {#if settings}\n        <div class=\"main\">\n            <h2>{M.focus}</h2>\n            <div>\n                <span>{ M.duration }</span>\n                <Input \n                    type=\"number\" \n                    bindvalue={settings.focus.duration} \n                    on:blur={()=>{}}/> \n                <span>{ M.minutes }</span>\n            </div>\n            <div>\n                <p>{ M.timer_sound_label }</p>\n                <select bind:value={focusTimerSound}>\n                    <option value=\"null\">{ M.none }</option>\n                    <optgroup label=\"{M.periodic_beat}\">\n                        {#each timerSounds as sound}\n                            <option value=\"{sound.files}\">{sound.name }</option>\n                        {/each}\n                    </optgroup>\n                    <optgroup label=\"{M.noise}\">\n                    <option value=\"'brown-noise'\">{ M.brown_noise }</option>\n                    <option value=\"'pink-noise'\">{ M.pink_noise }</option>\n                    <option value=\"'white-noise'\">{ M.white_noise }</option>\n                    </optgroup>\n                </select>\n                {#if canPlayTimerSound}\n                    <span on:mouseover={playTimerSound} on:mouseout={stopTimerSound} class=\"preview\">\n                        <i class=\"icon-play\"></i>\n                        <span>{ M.hover_preview }</span>\n                        <img src=\"/images/spinner.svg\" class:active={timerSound} alt=\"sponner\">\n                    </span>\n                {/if}\n            </div>\n            <div>\n                {#if focusTimerBPM != null}\n                    <p class=\"field\">\n                        <label>\n                            <span>{ M.speed_label }</span>\n                            <Input\n                                type=\"number\"\n                                min=\"1\" max=\"1000\"\n                                bindvalue={focusTimerBPM}/>\n                            <span>{ M.bpm }</span>\n                        </label>\n                    </p>\n                {/if}\n            </div>\n            <p>{ M.when_complete}</p>\n            <div class=\"group\">\n                <label>\n                    <input type=\"checkbox\" bind:value={settings.focus.notifications.desktop}>\n                    <span>{ M.show_desktop_notification }</span>\n                </label>\n                <label>\n                    <input type=\"checkbox\" bind:value={settings.focus.notifications.tab}>\n                    <span>{ M.show_new_tab_notification }</span>\n                </label>\n                <label>\n                    <span>{ M.play_audio_notification }</span>\n                    <select \n                        bind:value={settings.focus.notifications.sound} \n                        on:input={event => setSound(event.target.value)}>\n                        <option value=\"null\">{ M.none }</option>\n                        {#each notificationSounds as sound}\n                            <option salue={sound.file}>{ sound.name }</option>\n                        {/each}\n                    </select>\n                </label>\n            </div>\n        </div>\n        <div class=\"section\">\n        <h2>{ M.short_break }</h2>\n        <p class=\"field\">\n            <label>\n            <span>{ M.duration }</span>\n            <input\n                type=\"number\"\n                min=\"1\"\n                max=\"999\"\n                class=\"duration\"\n                bindvalue={settings.shortBreak.duration}>\n            <span>{ M.minutes }</span>\n            </label>\n        </p>\n        <p>{ M.when_complete }</p>\n        <div class=\"group\">\n            <p class=\"field\">\n            <label>\n                <input type=\"checkbox\" bindvalue={settings.shortBreak.notifications.desktop}>\n                <span>{ M.show_desktop_notification }</span>\n            </label>\n            </p>\n            <p class=\"field\">\n            <label>\n                <input type=\"checkbox\" bindvalue={settings.shortBreak.notifications.tab}>\n                <span>{ M.show_new_tab_notification }</span>\n            </label>\n            </p>\n            <p class=\"field\">\n            <label>\n                <span>{ M.play_audio_notification }</span>\n                <select \n                        bindvalue={settings.shortBreak.notifications.sound} \n                        on:input={event => setSound(event.target.value)}>\n                        <option value=\"null\">{ M.none }</option>\n                        {#each notificationSounds as sound}\n                            <option salue={sound.file}>{ sound.name }</option>\n                        {/each}\n                    </select>\n            </label>\n            </p>\n        </div>\n        </div>\n        <div class=\"section\">\n        <h2>{ M.long_break }</h2>\n        <p class=\"field\">\n            <label>\n            <span>{ M.take_a_long_break_setting }</span>\n            <select bindvalue={settings.longBreak.interval}>\n                <option value=\"0\">{ M.never }</option>\n                <option value=\"2\">{ M.every_2nd_break }</option>\n                <option value=\"3\">{ M.every_3rd_break }</option>\n                <option value=\"4\">{ M.every_4th_break }</option>\n                <option value=\"5\">{ M.every_5th_break }</option>\n                <option value=\"6\">{ M.every_6th_break }</option>\n                <option value=\"7\">{ M.every_7th_break }</option>\n                <option value=\"8\">{ M.every_8th_break }</option>\n                <option value=\"9\">{ M.every_9th_break }</option>\n                <option value=\"10\">{ M.every_10th_break }</option>\n            </select>\n            </label>\n        </p>\n        <fieldset :disabled=\"settings.longBreak.interval == 0\">\n            <p class=\"field\">\n            <label>\n                <span>{ M.duration }</span>\n                <input\n                type=\"number\"\n                min=\"1\"\n                max=\"999\"\n                class=\"duration\"\n                bindvalue={settings.longBreak.duration}>\n                <span>{ M.minutes }</span>\n            </label>\n            </p>\n            <p>{ M.when_complete }</p>\n            <div class=\"group\">\n            <p class=\"field\">\n                <label>\n                <input type=\"checkbox\" bindvalue={settings.longBreak.notifications.desktop}>\n                <span>{ M.show_desktop_notification }</span>\n                </label>\n            </p>\n            <p class=\"field\">\n                <label>\n                <input type=\"checkbox\" bindvalue={settings.longBreak.notifications.tab}>\n                <span>{ M.show_new_tab_notification }</span>\n                </label>\n            </p>\n            <p class=\"field\">\n                <label>\n                <span>{ M.play_audio_notification }</span>\n                <select \n                        bindvalue={settings.longBreak.notifications.sound} \n                        on:input={event => setSound(event.target.value)}>\n                        <option value=\"null\">{ M.none }</option>\n                        {#each notificationSounds as sound}\n                            <option salue={sound.file}>{ sound.name }</option>\n                        {/each}\n                    </select>\n                </label>\n            </p>\n            </div>\n        </fieldset>\n        </div>\n        <div class=\"section autostart\">\n        <h2>{ M.autostart_title }</h2>\n        <p>{ M.autostart_description }</p>\n        <p class=\"field\">\n            <label>\n            <span>{ M.time }</span>\n            <input type=\"time\" bindvalue={settings.autostart.time} class=\"time\" id=\"autostart-time\">\n            </label>\n        </p>\n        </div>\n        {#if showSettingsSaved}\n            <div on:click={dismissSettingsSaved} class=\"save\">\n                <p><img src=\"/images/check.svg\" alt=\"check mark\"> { M.settings_saved }</p>\n            </div>\n        {/if}\n    {/if}\n</Page>\n\n<style>\n    .main {\n        padding: 20px;\n    }\n</style>",
    "<div class=\"button-group\">\n    <slot></slot>\n</div>\n\n<style>\n    .button-group :global(button) {\n        border-radius: 0;\n    }\n\n    .button-group > :global(button):first-child:not(:last-child), \n    .button-group > :global(span:first-child:not(:last-child) > button) {\n        border-top-left-radius: 4px;\n        border-bottom-left-radius: 4px;\n    }\n\n    .button-group > :global(button):last-child:not(:first-child), \n    .button-group > :global(span:last-child:not(:first-child) > button) {\n        border-top-right-radius: 4px;\n        border-bottom-right-radius: 4px;\n    }\n\n    .button-group :global(button + button), \n    :global(button) + .button-group, \n    .button-group :global(span + button), \n    .button-group :global(button + span) , .button-group > :global(span + span), \n    .button-group + :global(button), \n    .button-group + .button-group {\n        margin-left: -1px;\n    }\n    \n    .button-group > :global(button), .button-group > :global(span > button) {\n        position: relative;\n    }\n\n    .button-group > :global(button:hover), \n    .button-group > :global(span > button:hover), \n    .button-group > :global(button:focus), \n    .button-group > :global(span > button:focus), \n    .button-group > :global(button:active), \n    .button-group > :global(span > button:active), \n    .button-group > :global(button.active), \n    .button-group > :global(span > button.active) {\n        z-index: 2;\n    }\n</style>",
    "<script>\n    import Icon from '../components/Icon.svelte'\n    const basePath = window.location.href\n    window.addEventListener('beforeunload', (event) => {\n        // Cancel the event as stated by the standard.\n        //event.preventDefault();\n        // Chrome requires returnValue to be set.\n        //event.returnValue = '';\n    });\n</script>\n<div class=\"window-title\">\n    <div class=\"title\">Julie</div>\n    <div class=\"profile\">\n        <a href=\"#!/profile\">\n            <Icon icon=\"account-outline\"></Icon>\n        </a>\n    </div>\n</div>\n\n<style>\n    .window-title {\n        display: grid;\n        grid-template-columns: 1fr auto 1fr;\n        grid-column-gap: 5px;\n        justify-items: center;\n        padding: 5px 0 5px;\n        color: #737373;\n        border-bottom: 1px #d9d0d9 solid;\n        position: relative;\n        -webkit-app-region: drag;\n        text-align: center;\n    }\n    .title {\n        grid-column-start: 2;\n    }\n    .profile {\n        font-size: 20px;\n        margin-left: auto;\n        margin-right: 15px;\n        padding: 0px 15px;\n    }\n</style>",
    "<script>\n    import Icon from './Icon.svelte'\n    export let type = 'text'\n    export let name = ''\n    export let label = ''\n    export let placeholder = ''\n    export let icon = ''\n    export let min = null\n    export let max = null\n    export let value = ''\n    export let disabled = false\n    export let autofocus\n\n    // Update value manually since Svelte does not allow data  \n    // binding if input type is dynamic (and for good reason)\n    function updateValue(e){\n        value=e.target.value\n    }\n\n</script>\n\n<label class=\"input-wrapper\">\n    {#if label}\n        <div class=\"label\">{label.length? label : placeholder}</div>\n    {/if}\n    {#if icon}\n        <span class=\"input-prefix\">\n            <Icon {icon}></Icon>\n        </span>\n    {/if}\n    <input \n        {min} {max}\n        on:blur on:change on:input={updateValue} on:input on:keypress on:focus\n        on:keydown {type} {name} {placeholder} {value} {disabled}  autofocus \n        class=\"{icon? 'input-icon': ''}\">\n</label>\n\n<style>\n    .input-wrapper {\n        line-height: 1.5;\n        display: inline-block;\n        width: 100%;\n        position: relative;\n    }\n    .input-prefix {\n        position: absolute;\n        top: 52%;\n        z-index: 2;\n        color: rgba(0,0,0,0.65);\n        line-height: 0;\n        -webkit-transform: translateY(-50%);\n        -ms-transform: translateY(-50%);\n        transform: translateY(-50%);\n        left: 12px;\n    }\n    input {\n        text-align: inherit;\n        display: inline-block;\n        width: 100%;\n        height: 35px;\n        padding: 4px 11px;\n        color: rgba(0,0,0,0.65);\n        font-size: 14px;\n        line-height: 1.5;\n        background-color: #fff;\n        background-image: none;\n        border: 1px solid #d9d9d9;\n        border-radius: 4px;\n        -webkit-transition: all .3s;\n        transition: all .3s;\n    }\n    input:hover {\n        border-color: #40a9ff;\n    }\n    input:focus {\n        border-color: #40a9ff;\n        outline: 0;\n        -webkit-box-shadow: 0 0 0 2px rgba(24,144,255,0.2);\n        box-shadow: 0 0 0 2px rgba(24,144,255,0.2);\n    }\n    .input-icon {\n        padding-left: 30px;\n    }\n    .label {\n        margin-bottom: 5px;\n    }\n</style>"
  ],
  "names": [],
  "mappings": "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"
}